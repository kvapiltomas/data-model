CREATE TABLE IF NOT EXISTS "dim_date" (
	"date_dwid" TEXT, 
	"date_code" TEXT,
	"calendar_date" TEXT,
	"calendar_date_string" TEXT,
	"calendar_date_alternative" TEXT,
	"calendar_year" TEXT,
	"calendar_year_desc" TEXT,
	"calendar_quarter" TEXT,
	"calendar_quarter_desc" TEXT,
	"calendar_quarter_year" TEXT,
	"month_of_year" TEXT,
	"month_year" TEXT,
	"month_name" TEXT,
	"month_year_desc" TEXT,
	"day_number_of_month" TEXT,
	"number_of_days_in_month" TEXT,
	"day_number_of_year" TEXT,
	"week_number_of_year" TEXT,
	"week_year" TEXT,
	"iso_week_number_of_year" TEXT,
	"iso_week_year" TEXT,
	"week_day" TEXT,
	"week_day_name" TEXT,
	"week_day_name_short" TEXT, 
	"week_day_name_first_letter" TEXT, 
	"is_week_day" TEXT, 
	"is_week_day_desc" TEXT, 
	"is_weekend" TEXT
);

SET START_DATE  = '2000-01-01';

SET NUMBER_DAYS= (SELECT TRUNC(40 * 365.25));

CREATE OR REPLACE TABLE "prep_date" AS (
	WITH "date_range" AS (
	SELECT DATEADD(DAY,(row_number() OVER (ORDER BY seq4()) -1), $START_DATE) AS "start_date", 
		row_number() OVER (ORDER BY seq4()) AS "date_dwid"
	FROM TABLE(generator(rowcount => $NUMBER_DAYS))
	)
SELECT TO_CHAR("date_dwid") AS "date_dwid", 
   TO_CHAR("start_date",'YYYYMMDD') AS "date_code", 
   TO_CHAR("start_date",'YYYY-MM-DD') AS "calendar_date", 
   TO_CHAR("start_date",'MON DD YYYY') AS "calendar_date_string", 
   TO_CHAR("start_date",'DD/MM/YYYY') AS "calendar_date_alternative", 
   TO_CHAR(YEAR("start_date")) AS "calendar_year", 
   TO_CHAR('Calendar Year '|| YEAR("start_date")) AS "calendar_year_desc", 
   TO_CHAR(QUARTER("start_date")) AS "calendar_quarter", 
   TO_CHAR('Quarter '|| QUARTER("start_date")) AS "calendar_quarter_desc", 
   TO_CHAR(YEAR("start_date") || QUARTER("start_date")) AS "calendar_quarter_year", 
   TO_CHAR(MONTH("start_date")) AS "month_of_year", 
   TO_CHAR(YEAR("start_date") || LPAD(MONTH("start_date"),2,'0')) AS "month_year", 
   TO_CHAR("start_date",'MMMM') AS "month_name", 
   TO_CHAR("start_date",'MMMM YYYY') AS "month_year_desc", 
   TO_CHAR(DAYOFMONTH("start_date")) AS "day_number_of_month", 
   TO_CHAR(DAYOFMONTH(LAST_DAY("start_date",'month'))) AS "number_of_days_in_month", 
   TO_CHAR(DAYOFYEAR("start_date")) AS "day_number_of_year", 
   TO_CHAR(WEEKOFYEAR("start_date")) AS "week_number_of_year", 
   TO_CHAR(YEAR("start_date") || LPAD(WEEKOFYEAR("start_date"),2,'0')) AS "week_year", 
   TO_CHAR(WEEKISO("start_date")) AS "iso_week_number_of_year", 
   TO_CHAR(YEAR("start_date") || LPAD(WEEKISO("start_date"),2,'0')) AS "iso_week_year", 
   TO_CHAR(DAYOFWEEK("start_date")) AS "week_day", 
   DECODE(DAYNAME("start_date"),'Mon','Monday','Tue','Tuesday','Wed','Wednesday','Thu','Thursday','Fri','Friday','Sat','Saturday','Sun','Sunday') AS "week_day_name", 
   DAYNAME("start_date") AS "week_day_name_short", 
   SUBSTRING(DAYNAME("start_date"),1,1) AS "week_day_name_first_letter", 
   IFF(DAYOFWEEK("start_date") BETWEEN 1 AND 5,'TRUE','FALSE') AS "is_week_day", 
   IFF(DAYOFWEEK("start_date") BETWEEN 1 AND 5,'FALSE','TRUE') AS "is_weekend", 
   IFF(DAYOFWEEK("start_date") BETWEEN 1 AND 5,'Weekday','Weekend') AS "is_week_day_desc"
FROM "date_range" dr
);

INSERT OVERWRITE INTO "dim_date" (
	"date_dwid", 
	"date_code",
	"calendar_date",
	"calendar_date_string",
	"calendar_date_alternative",
	"calendar_year",
	"calendar_year_desc",
	"calendar_quarter",
	"calendar_quarter_desc",
	"calendar_quarter_year",
	"month_of_year",
	"month_year",
	"month_name",
	"month_year_desc",
	"day_number_of_month",
	"number_of_days_in_month",
	"day_number_of_year",
	"week_number_of_year",
	"week_year",
	"iso_week_number_of_year",
	"iso_week_year",
	"week_day",
	"week_day_name",
	"week_day_name_short", 
	"week_day_name_first_letter", 
	"is_week_day", 
	"is_week_day_desc", 
	"is_weekend"
)
SELECT "date_dwid", 
	"date_code",
	"calendar_date",
	"calendar_date_string",
	"calendar_date_alternative",
	"calendar_year",
	"calendar_year_desc",
	"calendar_quarter",
	"calendar_quarter_desc",
	"calendar_quarter_year",
	"month_of_year",
	"month_year",
	"month_name",
	"month_year_desc",
	"day_number_of_month",
	"number_of_days_in_month",
	"day_number_of_year",
	"week_number_of_year",
	"week_year",
	"iso_week_number_of_year",
	"iso_week_year",
	"week_day",
	"week_day_name",
	"week_day_name_short", 
	"week_day_name_first_letter", 
	"is_week_day", 
	"is_week_day_desc", 
	"is_weekend"
FROM "prep_date";